{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/ContactComponent.js","components/HomeComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","shared/comments.js","redux/comments.js","redux/promotions.js","shared/leaders.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","to","id","width","src","image","alt","name","Menu","props","menu","dishes","map","isLoading","errMess","key","active","CommentForm","state","isModalOpen","toggleModal","bind","handleSubmit","this","setState","values","addComment","dishId","rating","author","comment","len","required","val","length","outline","isOpen","toggle","onSubmit","htmlFor","md","select","model","text","placeholder","validators","minLength","maxLength","show","messages","textarea","rows","type","value","color","Component","RenderDish","top","description","RenderComments","comments","cmnts","Intl","DateTimeFormat","year","month","day","format","Date","date","DishDetail","Header","toggleNav","isNavOpen","handleLogin","event","alert","username","password","remember","checked","preventDefault","dark","expand","href","height","navbar","innerRef","input","check","Footer","Contact","console","log","JSON","stringify","resetFeedbackForm","role","isNumber","isNaN","Number","validEmail","test","size","offset","checkbox","RenderCard","item","designation","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","RenderLeader","tag","object","body","heading","About","leaders","title","list","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","Main","fetchDishes","fetchComments","fetchPromos","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","withRouter","connect","dispatch","fetch","then","response","ok","error","Error","status","statusText","message","json","catch","actions","reset","Dishes","action","COMMENTS","Comments","toISOString","concat","Promotions","LEADERS","abbr","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fde89c8f.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Loading = () => {\n  return (\n    <div className=\"col-12\">\n      <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n      {/* pulse is used for spinning it, at 3 times the speed. It is forward spinning. */}\n      <p>Loading . . .</p>\n    </div>\n  );\n};\n","export const baseUrl = \"http://localhost:3001/\";\n","import React from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardImgOverlay,\n  CardTitle,\n  Breadcrumb,\n  BreadcrumbItem,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Loading } from \"./LoadingComponent\";\nimport { baseUrl } from \"../shared/baseUrl\";\n\nfunction RenderMenuItem({ dish, onClick }) {\n  return (\n    <Card>\n      {/* Route parameters */}\n      <Link to={`/menu/${dish.id}`}>\n        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n        <CardImgOverlay>\n          <CardTitle>{dish.name}</CardTitle>\n        </CardImgOverlay>\n      </Link>\n    </Card>\n  );\n}\n\nconst Menu = (props) => {\n  const menu = props.dishes.dishes.map((dish) => {\n    if (props.dishes.isLoading) {\n      return (\n        <div className=\"container\">\n          <div className=\"row\">\n            <Loading />\n          </div>\n        </div>\n      );\n    } else if (props.dishes.errMess) {\n      return (\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <h4>{props.dishes.errMess}</h4>\n            </div>\n          </div>\n        </div>\n      );\n    } else\n      return (\n        <div className=\"col-12 col-md-5 m-1\" key={dish.id}>\n          <RenderMenuItem dish={dish} />\n        </div>\n      );\n  });\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/home\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Menu</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"col-12\">\n          <h3>Menu</h3>\n          <hr />\n        </div>\n      </div>\n      <div className=\"row\">{menu}</div>\n    </div>\n  );\n};\n\nexport default Menu;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  Breadcrumb,\n  BreadcrumbItem,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Button,\n  Row,\n  Label,\n  Col,\n} from \"reactstrap\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\nimport { Link } from \"react-router-dom\";\nimport { Loading } from \"./LoadingComponent\";\nimport { baseUrl } from \"../shared/baseUrl\";\n\nexport class CommentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false,\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen,\n    });\n  }\n\n  handleSubmit(values) {\n    this.toggleModal();\n    // finally these parameters which we have given as inputs after submitting will be passed to addComment function in Action Creater\n    this.props.addComment(\n      this.props.dishId,\n      values.rating,\n      values.author,\n      values.comment\n    );\n  }\n\n  render() {\n    const required = (val) => val && val.length;\n    const maxLength = (len) => (val) => !val || val.length <= len;\n    const minLength = (len) => (val) => val && val.length >= len;\n    return (\n      <div>\n        <Button outline onClick={this.toggleModal}>\n          <span className=\"fa fa-edit fa-lg\"></span> Submit Comment\n        </Button>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          {/* check if modal is open or not and toggle its current state */}\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n          {/* toggle over here is connected to a btn to close the modal*/}\n          <ModalBody>\n            <div>\n              <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                <Row className=\"form-group\">\n                  <Label htmlFor=\"rating\" md={12}>\n                    Rating\n                  </Label>\n                  <Col md={12}>\n                    <Control.select\n                      model=\".rating\"\n                      name=\"rating\"\n                      className=\"form-control\"\n                    >\n                      <option>1</option>\n                      <option>2</option>\n                      <option>3</option>\n                      <option>4</option>\n                      <option>5</option>\n                    </Control.select>\n                  </Col>\n                </Row>\n                <Row className=\"form-group\">\n                  <Label htmlFor=\"author\" md={12}>\n                    Your Name\n                  </Label>\n                  <Col md={12}>\n                    <Control.text\n                      model=\".author\"\n                      id=\"author\"\n                      name=\"author\"\n                      placeholder=\"Your Name\"\n                      className=\"form-control\"\n                      validators={{\n                        required,\n                        minLength: minLength(3),\n                        maxLength: maxLength(15),\n                      }}\n                      // errors get triggered through the validators they are connected to the messages displayed if validator condition is not satisfied\n                    />\n                    <Errors\n                      className=\"text-danger\"\n                      // font color setting\n                      model=\".author\"\n                      show=\"touched\"\n                      // condition for the message to be shown is if the field is touched once\n                      messages={{\n                        required: \"Required \",\n                        minLength: \"Must be greater than 2 characters \",\n                        maxLength: \"Must be 15 characters or less\",\n                      }}\n                    />\n                  </Col>\n                </Row>\n                <Row className=\"form-group\">\n                  <Label htmlFor=\"feedback\" md={12}>\n                    Comment\n                  </Label>\n                  <Col md={12}>\n                    <Control.textarea\n                      model=\".comment\"\n                      id=\"comment\"\n                      name=\"comment\"\n                      rows=\"6\"\n                      className=\"form-control\"\n                      validators={{ required }}\n                    />\n                    <Errors\n                      className=\"text-danger\"\n                      model=\".comment\"\n                      show=\"touched\"\n                      messages={{ required: \"Required\" }}\n                    />\n                  </Col>\n                </Row>\n                <Button type=\"submit\" value=\"submit\" color=\"primary\">\n                  {/* onSubmit gets triggered on clicking this button */}\n                  Submit\n                </Button>\n              </LocalForm>\n            </div>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nfunction RenderDish({ dish }) {\n  if (dish != null)\n    return (\n      <div className=\"col-12 col-md-5 m-1\">\n        <Card>\n          <CardImg top src={baseUrl + dish.image} alt={dish.name} />\n          {/* fetching images from the server */}\n          <CardBody>\n            <CardTitle>{dish.name}</CardTitle>\n            <CardText>{dish.description}</CardText>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  else return <div></div>;\n}\n\nfunction RenderComments({ comments, addComment, dishId }) {\n  if (comments == null) {\n    return <div></div>;\n  }\n  //Traversing through all the comments\n  const cmnts = comments.map((comment) => {\n    return (\n      <li key={comment.id}>\n        <p>{comment.comment}</p>\n        <p>\n          -- {comment.author}, &nbsp;\n          {new Intl.DateTimeFormat(\"en-US\", {\n            year: \"numeric\",\n            month: \"long\",\n            day: \"2-digit\",\n          }).format(new Date(comment.date))}\n        </p>\n      </li>\n    );\n  });\n  return (\n    <div className=\"col-12 col-md-5 m-1\">\n      <h4> Comments </h4>\n      <ul className=\"list-unstyled\">{cmnts}</ul>\n      <CommentForm dishId={dishId} addComment={addComment} />\n    </div>\n  );\n}\n\nconst DishDetail = (props) => {\n  if (props.isLoading) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Loading />\n        </div>\n      </div>\n    );\n  } else if (props.errMess) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <h4>{props.errMess}</h4>\n        </div>\n      </div>\n    );\n  } else if (props.dish != null)\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/menu\">Menu</Link>\n              {/* goes to http://localhost:3000/menu/ in the URL */}\n            </BreadcrumbItem>\n            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n          </Breadcrumb>\n          <div className=\"col-12 \">\n            <h3>{props.dish.name}</h3>\n            <hr />\n          </div>\n          <RenderDish dish={props.dish} />\n          <RenderComments\n            comments={props.comments}\n            addComment={props.addComment}\n            dishId={props.dish.id}\n          />\n        </div>\n      </div>\n    );\n  else {\n    return <div></div>;\n  }\n};\n\nexport default DishDetail;\n","import React, { Component } from \"react\";\nimport {\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavbarToggler,\n  Collapse,\n  NavItem,\n  Jumbotron,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n} from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleNav = this.toggleNav.bind(this);\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false,\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen,\n    });\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen,\n    });\n  }\n\n  handleLogin(event) {\n    this.toggleModal();\n    // once submit button is clicked modal will be toggled, thus closed.\n    alert(\n      \"Username: \" +\n        this.username.value +\n        \" Password: \" +\n        this.password.value +\n        \" Remember: \" +\n        this.remember.checked\n    );\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div>\n        {/* from md to lg no collapse will occur */}\n        <Navbar dark expand=\"md\">\n          <div className=\"container\">\n            {/* Toggler on the left and Brand on the right depending on what is declared first */}\n            <NavbarToggler onClick={this.toggleNav} />\n            <NavbarBrand className=\"mr-auto\" href=\"/\">\n              <img\n                src=\"assets/images/logo.png\"\n                height=\"30\"\n                width=\"41\"\n                alt=\"Ristorante Con Fusion\"\n              />\n            </NavbarBrand>\n            <Collapse isOpen={this.state.isNavOpen} navbar>\n              {/* isOpen is a function? */}\n              <Nav navbar>\n                {/* navabar? */}\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/home\">\n                    <span className=\"fa fa-home fa-lg\"></span> Home\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/aboutus\">\n                    <span className=\"fa fa-info fa-lg\"></span> About Us\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/menu\">\n                    <span className=\"fa fa-list fa-lg\"></span> Menu\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/contactus\">\n                    <span className=\"fa fa-address-card fa-lg\"></span> Contact\n                    Us\n                  </NavLink>\n                </NavItem>\n              </Nav>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <Button outline onClick={this.toggleModal}>\n                    <span className=\"fa fa-sign-in fa-lg\"></span> Login\n                  </Button>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </div>\n        </Navbar>\n        <Jumbotron>\n          <div className=\"container\">\n            <div className=\"row row-header\">\n              <div className=\"col-12 col-sm-6\">\n                <h1>Ristorante con Fusion</h1>\n                <p>\n                  We take inspiration from the World's best cuisines, and create\n                  a unique fusion experience. Our lipsmacking creations will\n                  tickle your culinary senses!\n                </p>\n              </div>\n            </div>\n          </div>\n        </Jumbotron>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          {/* check if modal is open or not and toggle its current state */}\n          <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n          {/* toggle over here is connected to a btn to close the modal*/}\n          <ModalBody>\n            <Form onSubmit={this.handleLogin}>\n              {/* on submitting, the modal will close and an alert will be shown */}\n              <FormGroup>\n                <Label htmlFor=\"username\">Username</Label>\n                <Input\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  innerRef={(input) => (this.username = input)}\n                  // Refs provide a way to access DOM nodes or React elements created in the render method. It is used to access the values taken as input in this case in simple words.\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"password\">Password</Label>\n                <Input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  innerRef={(input) => (this.password = input)}\n                />\n              </FormGroup>\n              <FormGroup check>\n                <Label check className=\"mb-3\">\n                  <Input\n                    type=\"checkbox\"\n                    name=\"remember\"\n                    innerRef={(input) => (this.remember = input)}\n                  />\n                  Remember me\n                </Label>\n              </FormGroup>\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\n                {/* submit is the initial value of the button in the form */}\n                Login\n              </Button>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\nexport default Header;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Footer(props) {\n  return (\n    <div className=\"footer\">\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-4 offset-1 col-sm-2\">\n            <h5>Links</h5>\n            <ul className=\"list-unstyled\">\n              <li>\n                <Link to=\"/home\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/aboutus\">About Us</Link>\n              </li>\n              <li>\n                <Link to=\"/menu\">Menu</Link>\n              </li>\n              <li>\n                <Link to=\"/contactus\">Contact Us</Link>\n              </li>\n            </ul>\n          </div>\n          <div className=\"col-7 col-sm-5\">\n            <h5>Our Address</h5>\n            <address>\n              121, Clear Water Bay Road\n              <br />\n              Clear Water Bay, Kowloon\n              <br />\n              HONG KONG\n              <br />\n              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678\n              <br />\n              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321\n              <br />\n              <i className=\"fa fa-envelope fa-lg\"></i>:{\" \"}\n              <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n            </address>\n          </div>\n          <div className=\"col-12 col-sm-4 align-self-center\">\n            <div className=\"text-center\">\n              <a\n                className=\"btn btn-social-icon btn-google\"\n                href=\"http://google.com/+\"\n              >\n                <i className=\"fa fa-google-plus\"></i>\n              </a>\n              <a\n                className=\"btn btn-social-icon btn-facebook\"\n                href=\"http://www.facebook.com/profile.php?id=\"\n              >\n                <i className=\"fa fa-facebook\"></i>\n              </a>\n              <a\n                className=\"btn btn-social-icon btn-linkedin\"\n                href=\"http://www.linkedin.com/in/\"\n              >\n                <i className=\"fa fa-linkedin\"></i>\n              </a>\n              <a\n                className=\"btn btn-social-icon btn-twitter\"\n                href=\"http://twitter.com/\"\n              >\n                <i className=\"fa fa-twitter\"></i>\n              </a>\n              <a\n                className=\"btn btn-social-icon btn-google\"\n                href=\"http://youtube.com/\"\n              >\n                <i className=\"fa fa-youtube\"></i>\n              </a>\n              <a className=\"btn btn-social-icon\" href=\"mailto:\">\n                <i className=\"fa fa-envelope-o\"></i>\n              </a>\n            </div>\n          </div>\n        </div>\n        <div className=\"row justify-content-center\">\n          <div className=\"col-auto\">\n            <p>© Copyright 2020 Ristorante Con Fusion</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { Component } from \"react\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Label,\n  Button,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Control, Form, Errors } from \"react-redux-form\";\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(values) {\n    console.log(\"Current State is: \" + JSON.stringify(values));\n    alert(\"Current State is: \" + JSON.stringify(values));\n    this.props.resetFeedbackForm();\n    // event.preventDefault();\n  }\n\n  render() {\n    const required = (val) => val && val.length;\n    const maxLength = (len) => (val) => !val || val.length <= len;\n    const minLength = (len) => (val) => val && val.length >= len;\n    const isNumber = (val) => !isNaN(Number(val));\n    const validEmail = (val) =>\n      /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/home\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n          </Breadcrumb>\n          <div className=\"col-12\">\n            <h3>Contact Us</h3>\n            <hr />\n          </div>\n        </div>\n        <div className=\"row row-content\">\n          <div className=\"col-12\">\n            <h3>Location Information</h3>\n          </div>\n          <div className=\"col-12 col-sm-4 offset-sm-1\">\n            <h5>Our Address</h5>\n            <address>\n              121, Clear Water Bay Road\n              <br />\n              Clear Water Bay, Kowloon\n              <br />\n              HONG KONG\n              <br />\n              <i className=\"fa fa-phone\"></i>: +852 1234 5678\n              <br />\n              <i className=\"fa fa-fax\"></i>: +852 8765 4321\n              <br />\n              <i className=\"fa fa-envelope\"></i>:{\" \"}\n              <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n            </address>\n          </div>\n          <div className=\"col-12 col-sm-6 offset-sm-1\">\n            <h5>Map of our Location</h5>\n          </div>\n          <div className=\"col-12 col-sm-11 offset-sm-1\">\n            <div className=\"btn-group\" role=\"group\">\n              <a\n                role=\"button\"\n                className=\"btn btn-primary\"\n                href=\"tel:+85212345678\"\n              >\n                <i className=\"fa fa-phone\"></i> Call\n              </a>\n              <a role=\"button\" className=\"btn btn-info\">\n                <i className=\"fa fa-skype\"></i> Skype\n              </a>\n              <a\n                role=\"button\"\n                className=\"btn btn-success\"\n                href=\"mailto:confusion@food.net\"\n              >\n                <i className=\"fa fa-envelope-o\"></i> Email\n              </a>\n            </div>\n          </div>\n        </div>\n        <div className=\"row row-content\">\n          <div className=\"col-12\">\n            <h3>Send us your Feedback</h3>\n          </div>\n          <div className=\"col-12 col-md-9\">\n            {/* on md to lg screens columns occupy 9 grid parts else 12 */}\n            {/* This is a controlled component in React as we keep updating and storing the value in the state which is the single source of truth and this value can also be accessed by other components */}\n            <Form\n              model=\"feedback\"\n              onSubmit={(values) => this.handleSubmit(values)}\n            >\n              <Row className=\"form-group\">\n                <Label htmlFor=\"firstname\" md={2}>\n                  First Name\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".firstname\"\n                    id=\"firstname\"\n                    name=\"firstname\"\n                    placeholder=\"First Name\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(3),\n                      maxLength: maxLength(15),\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".firstname\"\n                    show=\"touched\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be greater than 2 characters\",\n                      maxLength: \"Must be 15 characters or less\",\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"lastname\" md={2}>\n                  Last Name\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".lastname\"\n                    id=\"lastname\"\n                    name=\"lastname\"\n                    placeholder=\"Last Name\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(3),\n                      maxLength: maxLength(15),\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".lastname\"\n                    show=\"touched\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be greater than 2 characters\",\n                      maxLength: \"Must be 15 characters or less\",\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"telnum\" md={2}>\n                  Contact Tel.\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".telnum\"\n                    id=\"telnum\"\n                    name=\"telnum\"\n                    placeholder=\"Tel. Number\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(3),\n                      maxLength: maxLength(15),\n                      isNumber,\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".telnum\"\n                    show=\"touched\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be greater than 2 numbers\",\n                      maxLength: \"Must be 15 numbers or less\",\n                      isNumber: \"Must be a number\",\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"email\" md={2}>\n                  Email\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".email\"\n                    id=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      validEmail,\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".email\"\n                    show=\"touched\"\n                    messages={{\n                      required: \"Required\",\n                      validEmail: \"Invalid Email Address\",\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Col md={{ size: 6, offset: 2 }}>\n                  <div className=\"form-check\">\n                    <Label check>\n                      <Control.checkbox\n                        model=\".agree\"\n                        name=\"agree\"\n                        className=\"form-check-input\"\n                      />{\" \"}\n                      <strong>May we contact you?</strong>\n                    </Label>\n                  </div>\n                </Col>\n                <Col md={{ size: 3, offset: 1 }}>\n                  <Control.select\n                    model=\".contactType\"\n                    name=\"contactType\"\n                    className=\"form-control\"\n                  >\n                    <option>Tel.</option>\n                    <option>Email</option>\n                  </Control.select>\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"message\" md={2}>\n                  Your Feedback\n                </Label>\n                <Col md={10}>\n                  <Control.textarea\n                    model=\".message\"\n                    id=\"message\"\n                    name=\"message\"\n                    rows=\"12\"\n                    className=\"form-control\"\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Col md={{ size: 10, offset: 2 }}>\n                  <Button type=\"submit\" color=\"primary\">\n                    Send Feedback\n                  </Button>\n                </Col>\n              </Row>\n            </Form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n} from \"reactstrap\";\nimport { Loading } from \"./LoadingComponent\";\nimport { baseUrl } from \"../shared/baseUrl\";\n\nfunction RenderCard({ item, isLoading, errMess }) {\n  if (isLoading) {\n    return <Loading />;\n  } else if (errMess) {\n    return <h4>{errMess}</h4>;\n  } else\n    return (\n      <Card>\n        <CardImg src={baseUrl + item.image} alt={item.name} />\n        <CardBody>\n          <CardTitle>{item.name}</CardTitle>\n          {item.designation ? (\n            <CardSubtitle>{item.designation}</CardSubtitle>\n          ) : null}\n          <CardText>{item.description}</CardText>\n        </CardBody>\n      </Card>\n    );\n}\n\nfunction Home(props) {\n  return (\n    <div className=\"container\">\n      <div className=\"row align-items-start\">\n        <div className=\"col-12 col-md m-1\">\n          <RenderCard\n            item={props.dish}\n            isLoading={props.dishesLoading}\n            errMess={props.dishesErrMess}\n          />\n        </div>\n        <div className=\"col-12 col-md m-1\">\n          <RenderCard\n            item={props.promotion}\n            isLoading={props.promoLoading}\n            errMess={props.promoErrMess}\n          />\n        </div>\n        <div className=\"col-12 col-md m-1\">\n          <RenderCard item={props.leader} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Card,\n  CardBody,\n  CardHeader,\n  Media,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst RenderLeader = ({ leader }) => {\n  return (\n    <div key={leader.id} className=\"col-12 mt-5\">\n      <Media tag=\"li\">\n        <Media>\n          <Media object src={leader.image} alt={leader.name} />\n        </Media>\n        <Media body className=\"ml-5\">\n          <Media heading>{leader.name}</Media>\n          <p>{leader.designation}</p>\n          <p>{leader.description}</p>\n        </Media>\n      </Media>\n    </div>\n  );\n};\n\n// props needs to be passed in for a functional component unlike a class component\nfunction About(props) {\n  const leaders = props.leaders.map((leader) => {\n    return <RenderLeader leader={leader} />;\n  });\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/home\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>About Us</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"col-12\">\n          <h3>About Us</h3>\n          <hr />\n        </div>\n      </div>\n      <div className=\"row row-content\">\n        <div className=\"col-12 col-md-6\">\n          <h2>Our History</h2>\n          <p>\n            Started in 2010, Ristorante con Fusion quickly established itself as\n            a culinary icon par excellence in Hong Kong. With its unique brand\n            of world fusion cuisine that can be found nowhere else, it enjoys\n            patronage from the A-list clientele in Hong Kong. Featuring four of\n            the best three-star Michelin chefs in the world, you never know what\n            will arrive on your plate the next time you visit us.\n          </p>\n          <p>\n            The restaurant traces its humble beginnings to{\" \"}\n            <em>The Frying Pan</em>, a successful chain started by our CEO, Mr.\n            Peter Pan, that featured for the first time the world's best\n            cuisines in a pan.\n          </p>\n        </div>\n        <div className=\"col-12 col-md-5\">\n          <Card>\n            <CardHeader className=\"bg-primary text-white\">\n              Facts At a Glance\n            </CardHeader>\n            <CardBody>\n              <dl className=\"row p-1\">\n                <dt className=\"col-6\">Started</dt>\n                <dd className=\"col-6\">3 Feb. 2013</dd>\n                <dt className=\"col-6\">Major Stake Holder</dt>\n                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                <dt className=\"col-6\">Last Year's Turnover</dt>\n                <dd className=\"col-6\">$1,250,375</dd>\n                <dt className=\"col-6\">Employees</dt>\n                <dd className=\"col-6\">40</dd>\n              </dl>\n            </CardBody>\n          </Card>\n        </div>\n        <div className=\"col-12\">\n          <Card>\n            <CardBody className=\"bg-faded\">\n              <blockquote className=\"blockquote\">\n                <p className=\"mb-0\">\n                  You better cut the pizza in four pieces because I'm not hungry\n                  enough to eat six.\n                </p>\n                <footer className=\"blockquote-footer\">\n                  Yogi Berra,\n                  <cite title=\"Source Title\">\n                    The Wit and Wisdom of Yogi Berra, P. Pepe, Diversion Books,\n                    2014\n                  </cite>\n                </footer>\n              </blockquote>\n            </CardBody>\n          </Card>\n        </div>\n      </div>\n      <div className=\"row row-content\">\n        <div className=\"col-12\">\n          <h2>Corporate Leadership</h2>\n        </div>\n        <div className=\"col-12\">\n          <Media list>{leaders}</Media>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default About;\n","import * as ActionTypes from \"./ActionTypes\";\n// import { DISHES } from \"../shared/dishes\";\nimport { baseUrl } from \"../shared/baseUrl\";\n\n// Actions are payloads of information that send data from your application to your store. They are the only source of information for the store\n\n// This is an action object which always contains a type\nexport const addComment = (dishId, rating, author, comment) => ({\n  type: ActionTypes.ADD_COMMENT,\n  // ADD_COMMENT is a const in ActionTypes\n  // Actions are plain JavaScript objects. Actions must have a type property that indicates the type of action being performed. Types should typically be defined as string constants.\n  // data that is going to be carried to the reducer function is stored in payload\n  // Actions are payloads of information that send data from your application to your store. They are the only source of information for the store. You send them to the store using store.dispatch().\n\n  // Payload is what is bundled in your actions and passed around between reducers in your redux application.\n  payload: {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment,\n  },\n});\n\n// fetchDishes is a thunk that dispatches several actions(function within a function = thunk)\nexport const fetchDishes = () => (dispatch) => {\n  dispatch(dishesLoading(true));\n\n  return (\n    fetch(baseUrl + \"dishes\")\n      .then(\n        (response) => {\n          if (response.ok) {\n            return response;\n          } else {\n            var error = new Error(\n              \"Error \" + response.status + \": \" + response.statusText\n            );\n            error.response = response;\n            throw error;\n          }\n        },\n\n        (error) => {\n          var errmess = new Error(error.message);\n          throw errmess;\n        }\n      )\n      // successive .then can be chained\n      .then((response) => response.json())\n      .then((dishes) => dispatch(addDishes(dishes)))\n      .catch((error) => dispatch(dishesFailed(error.message)))\n  );\n};\n\nexport const dishesLoading = () => ({\n  type: ActionTypes.DISHES_LOADING,\n});\n\nexport const dishesFailed = (errmess) => ({\n  type: ActionTypes.DISHES_FAILED,\n  payload: errmess,\n  // errmess is a string\n});\n\nexport const addDishes = (dishes) => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes,\n});\n\nexport const fetchComments = () => (dispatch) => {\n  return fetch(baseUrl + \"comments\")\n    .then(\n      (response) => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      (error) => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then((response) => response.json())\n    .then((comments) => dispatch(addComments(comments)))\n    .catch((error) => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess,\n});\n\nexport const addComments = (comments) => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments,\n});\n\nexport const fetchPromos = () => (dispatch) => {\n  dispatch(promosLoading());\n\n  return fetch(baseUrl + \"promotions\")\n    .then(\n      (response) => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      (error) => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then((response) => response.json())\n    .then((promos) => dispatch(addPromos(promos)))\n    .catch((error) => dispatch(promosFailed(error.message)));\n};\n\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING,\n});\n\nexport const promosFailed = (errmess) => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess,\n});\n\nexport const addPromos = (promos) => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos,\n});\n","export const ADD_COMMENT = \"ADD_COMMENT\";\nexport const DISHES_LOADING = \"DISHES_LOADING\";\nexport const DISHES_FAILED = \"DISHES_FAILED\";\nexport const ADD_DISHES = \"ADD_DISHES\";\nexport const ADD_COMMENTS = \"ADD_COMMENTS\";\nexport const COMMENTS_FAILED = \"COMMENTS_FAILED\";\nexport const PROMOS_LOADING = \"PROMOS_LOADING\";\nexport const ADD_PROMOS = \"ADD_PROMOS\";\nexport const PROMOS_FAILED = \"PROMOS_FAILED\";\n","import React, { Component } from \"react\";\n// import { Navbar, NavbarBrand } from \"reactstrap\";\nimport Menu from \"./MenuComponent\";\nimport DishDetail from \"./DishdetailComponent\";\nimport Header from \"./HeaderComponent\";\nimport Footer from \"./FooterComponent\";\nimport Contact from \"./ContactComponent\";\nimport Home from \"./HomeComponent\";\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n// connect used to connect component to redux store\nimport About from \"./AboutComponent\";\nimport {\n  addComment,\n  fetchDishes,\n  fetchComments,\n  fetchPromos,\n} from \"../redux/ActionCreators\";\nimport { actions } from \"react-redux-form\";\n\n// takes in the reducer's state and is available as props to the MainComponent\nconst mapStateToProps = (state) => {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders,\n  };\n};\n\n// mapDispatchToProps is used for dispatching actions to the store.\n// dispatch is a function of the Redux store. You call store.dispatch to dispatch an action. This is the only way to trigger a state change.\n\nconst mapDispatchToProps = (dispatch) => ({\n  addComment: (dishId, rating, author, comment) =>\n    dispatch(addComment(dishId, rating, author, comment)),\n  // dispatch is required to carry out the action\n  // obtain the action using addComment\n  // pass it the parameters to be added to the state\n  // it returns the action object which is then passed to dispatch\n\n  fetchDishes: () => {\n    dispatch(fetchDishes());\n  },\n  resetFeedbackForm: () => {\n    dispatch(actions.reset(\"feedback\"));\n  },\n  // the form will be reset after submitting using actions from react redux form\n  // fetchDishes is a thunk which is being dispatched.\n  fetchComments: () => dispatch(fetchComments()),\n  fetchPromos: () => dispatch(fetchPromos()),\n});\n\nclass Main extends Component {\n  // dishes will be fetched just after this component is mounted\n  componentDidMount() {\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n  }\n  render() {\n    // A match object contains information about how a <Route path> matched the URL. match objects contain the following properties. Part of react-router.\n    const DishWithId = ({ match }) => {\n      return (\n        <DishDetail\n          dish={\n            this.props.dishes.dishes.filter(\n              (dish) => dish.id === parseInt(match.params.dishId, 10)\n            )[0]\n          }\n          isLoading={this.props.dishes.isLoading}\n          errMess={this.props.dishes.errMess}\n          comments={this.props.comments.comments.filter(\n            (comment) => comment.dishId === parseInt(match.params.dishId, 10)\n          )}\n          addComment={this.props.addComment}\n        />\n      );\n    };\n\n    const HomePage = () => {\n      return (\n        <Home\n          // if dish is featured as true in the dishes data then it will be displayed\n          // this.state has become this.props as we are using a store to store the state\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n          dishesLoading={this.props.dishes.isLoading}\n          dishesErrMess={this.props.dishes.errMess}\n          promotion={\n            this.props.promotions.promotions.filter(\n              (promo) => promo.featured\n            )[0]\n          }\n          leader={this.props.leaders.filter((leader) => leader.featured)[0]}\n          promoLoading={this.props.promotions.isLoading}\n          promoErrMess={this.props.promotions.errMess}\n        />\n      );\n    };\n\n    return (\n      <div>\n        <Header />\n        <Switch>\n          {/* If we know that only one route will be chosen, we can use a <Switch> component to render only the first route that matches the location(used for exact path) */}\n          {/* Dynamic Routing used */}\n          {/* <Link> components are how you create links to those different routes */}\n          {/* <Route> component needs a path which is the URL and then a component that you want rendered when navigating to that path. */}\n          <Route path=\"/home\" component={HomePage} />\n          {/*\"exact path\" only displays one component at a time and switches between the components when the link is pressed */}\n          <Route\n            exact\n            path=\"/menu\"\n            component={() => <Menu dishes={this.props.dishes} />}\n          />\n          <Route\n            exact\n            path=\"/aboutus\"\n            component={() => <About leaders={this.props.leaders} />}\n            // Passing leaders to About component\n          />\n          <Route path=\"/menu/:dishId\" component={DishWithId} />\n          {/* Routes the menu to the exact dish using dishid and loads it seperately */}\n          <Route\n            exact\n            path=\"/contactus\"\n            component={() => (\n              <Contact resetFeedbackForm={this.props.resetFeedbackForm} />\n            )}\n          />\n          {/* resetFeedbackForm is passed to the Contact component as it posseses a form */}\n          {/* Redirect= Default if wrong URL entered */}\n          <Redirect to=\"/home\" />\n        </Switch>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n// connecting component to the react router\n//  dispatch is required to carry out the action\n","import * as ActionTypes from \"./ActionTypes\";\n\nexport const Dishes = (\n  // initial state\n  state = { isLoading: true, errMess: null, dishes: [] },\n  action\n) => {\n  // Handling different actions\n  switch (action.type) {\n    case ActionTypes.ADD_DISHES:\n      return {\n        ...state,\n        isLoading: false,\n        errMess: null,\n        dishes: action.payload,\n      };\n\n    case ActionTypes.DISHES_LOADING:\n      return { ...state, isLoading: true, errMess: null, dishes: [] };\n\n    case ActionTypes.DISHES_FAILED:\n      return { ...state, isLoading: false, errMess: action.payload };\n\n    default:\n      return state;\n  }\n};\n","export const COMMENTS = [\n  {\n    id: 0,\n    dishId: 0,\n    rating: 5,\n    comment: \"Imagine all the eatables, living in conFusion!\",\n    author: \"John Lemon\",\n    date: \"2012-10-16T17:57:28.556094Z\",\n  },\n  {\n    id: 1,\n    dishId: 0,\n    rating: 4,\n    comment:\n      \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\n    author: \"Paul McVites\",\n    date: \"2014-09-05T17:57:28.556094Z\",\n  },\n  {\n    id: 2,\n    dishId: 0,\n    rating: 3,\n    comment: \"Eat it, just eat it!\",\n    author: \"Michael Jaikishan\",\n    date: \"2015-02-13T17:57:28.556094Z\",\n  },\n  {\n    id: 3,\n    dishId: 0,\n    rating: 4,\n    comment: \"Ultimate, Reaching for the stars!\",\n    author: \"Ringo Starry\",\n    date: \"2013-12-02T17:57:28.556094Z\",\n  },\n  {\n    id: 4,\n    dishId: 0,\n    rating: 2,\n    comment: \"It's your birthday, we're gonna party!\",\n    author: \"25 Cent\",\n    date: \"2011-12-02T17:57:28.556094Z\",\n  },\n  {\n    id: 5,\n    dishId: 1,\n    rating: 5,\n    comment: \"Imagine all the eatables, living in conFusion!\",\n    author: \"John Lemon\",\n    date: \"2012-10-16T17:57:28.556094Z\",\n  },\n  {\n    id: 6,\n    dishId: 1,\n    rating: 4,\n    comment:\n      \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\n    author: \"Paul McVites\",\n    date: \"2014-09-05T17:57:28.556094Z\",\n  },\n  {\n    id: 7,\n    dishId: 1,\n    rating: 3,\n    comment: \"Eat it, just eat it!\",\n    author: \"Michael Jaikishan\",\n    date: \"2015-02-13T17:57:28.556094Z\",\n  },\n  {\n    id: 8,\n    dishId: 1,\n    rating: 4,\n    comment: \"Ultimate, Reaching for the stars!\",\n    author: \"Ringo Starry\",\n    date: \"2013-12-02T17:57:28.556094Z\",\n  },\n  {\n    id: 9,\n    dishId: 1,\n    rating: 2,\n    comment: \"It's your birthday, we're gonna party!\",\n    author: \"25 Cent\",\n    date: \"2011-12-02T17:57:28.556094Z\",\n  },\n  {\n    id: 10,\n    dishId: 2,\n    rating: 5,\n    comment: \"Imagine all the eatables, living in conFusion!\",\n    author: \"John Lemon\",\n    date: \"2012-10-16T17:57:28.556094Z\",\n  },\n  {\n    id: 11,\n    dishId: 2,\n    rating: 4,\n    comment:\n      \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\n    author: \"Paul McVites\",\n    date: \"2014-09-05T17:57:28.556094Z\",\n  },\n  {\n    id: 12,\n    dishId: 2,\n    rating: 3,\n    comment: \"Eat it, just eat it!\",\n    author: \"Michael Jaikishan\",\n    date: \"2015-02-13T17:57:28.556094Z\",\n  },\n  {\n    id: 13,\n    dishId: 2,\n    rating: 4,\n    comment: \"Ultimate, Reaching for the stars!\",\n    author: \"Ringo Starry\",\n    date: \"2013-12-02T17:57:28.556094Z\",\n  },\n  {\n    id: 14,\n    dishId: 2,\n    rating: 2,\n    comment: \"It's your birthday, we're gonna party!\",\n    author: \"25 Cent\",\n    date: \"2011-12-02T17:57:28.556094Z\",\n  },\n  {\n    id: 15,\n    dishId: 3,\n    rating: 5,\n    comment: \"Imagine all the eatables, living in conFusion!\",\n    author: \"John Lemon\",\n    date: \"2012-10-16T17:57:28.556094Z\",\n  },\n  {\n    id: 16,\n    dishId: 3,\n    rating: 4,\n    comment:\n      \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\n    author: \"Paul McVites\",\n    date: \"2014-09-05T17:57:28.556094Z\",\n  },\n  {\n    id: 17,\n    dishId: 3,\n    rating: 3,\n    comment: \"Eat it, just eat it!\",\n    author: \"Michael Jaikishan\",\n    date: \"2015-02-13T17:57:28.556094Z\",\n  },\n  {\n    id: 18,\n    dishId: 3,\n    rating: 4,\n    comment: \"Ultimate, Reaching for the stars!\",\n    author: \"Ringo Starry\",\n    date: \"2013-12-02T17:57:28.556094Z\",\n  },\n  {\n    id: 19,\n    dishId: 3,\n    rating: 2,\n    comment: \"It's your birthday, we're gonna party!\",\n    author: \"25 Cent\",\n    date: \"2011-12-02T17:57:28.556094Z\",\n  },\n];\n","import { COMMENTS } from \"../shared/comments\";\nimport * as ActionTypes from \"./ActionTypes\";\n\nexport const Comments = (state = COMMENTS, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_COMMENTS:\n      return { ...state, errMess: null, comments: action.payload };\n\n    case ActionTypes.COMMENTS_FAILED:\n      return { ...state, errMess: action.payload };\n\n    // if action type is Add Comment\n    case ActionTypes.ADD_COMMENT:\n      var comment = action.payload;\n      comment.id = state.length;\n      // state.length returns tha array length, so the id will start from 0 and get assigned accordingly as the no of comments increase\n      comment.date = new Date().toISOString();\n      console.log(\"Comment: \", comment);\n      return state.concat(comment);\n    // concat will add to the existing comments present and not mutate the previous ones\n\n    default:\n      return state;\n  }\n};\n","import * as ActionTypes from \"./ActionTypes\";\n\nexport const Promotions = (\n  state = { isLoading: true, errMess: null, promotions: [] },\n  action\n) => {\n  switch (action.type) {\n    case ActionTypes.ADD_PROMOS:\n      return {\n        ...state,\n        isLoading: false,\n        errMess: null,\n        promotions: action.payload,\n      };\n\n    case ActionTypes.PROMOS_LOADING:\n      return { ...state, isLoading: true, errMess: null, promotions: [] };\n\n    case ActionTypes.PROMOS_FAILED:\n      return { ...state, isLoading: false, errMess: action.payload };\n\n    default:\n      return state;\n  }\n};\n","export const LEADERS = [\n  {\n    id: 0,\n    name: \"Peter Pan\",\n    image: \"/assets/images/alberto.png\",\n    designation: \"Chief Epicurious Officer\",\n    abbr: \"CEO\",\n    featured: false,\n    description:\n      \"Our CEO, Peter, credits his hardworking East Asian immigrant parents who undertook the arduous journey to the shores of America with the intention of giving their children the best future. His mother's wizardy in the kitchen whipping up the tastiest dishes with whatever is available inexpensively at the supermarket, was his first inspiration to create the fusion cuisines for which The Frying Pan became well known. He brings his zeal for fusion cuisines to this restaurant, pioneering cross-cultural culinary connections.\",\n  },\n  {\n    id: 1,\n    name: \"Dhanasekaran Witherspoon\",\n    image: \"/assets/images/alberto.png\",\n    designation: \"Chief Food Officer\",\n    abbr: \"CFO\",\n    featured: false,\n    description:\n      \"Our CFO, Danny, as he is affectionately referred to by his colleagues, comes from a long established family tradition in farming and produce. His experiences growing up on a farm in the Australian outback gave him great appreciation for varieties of food sources. As he puts it in his own words, Everything that runs, wins, and everything that stays, pays!\",\n  },\n  {\n    id: 2,\n    name: \"Agumbe Tang\",\n    image: \"/assets/images/alberto.png\",\n    designation: \"Chief Taste Officer\",\n    abbr: \"CTO\",\n    featured: false,\n    description:\n      \"Blessed with the most discerning gustatory sense, Agumbe, our CFO, personally ensures that every dish that we serve meets his exacting tastes. Our chefs dread the tongue lashing that ensues if their dish does not meet his exacting standards. He lives by his motto, You click only if you survive my lick.\",\n  },\n  {\n    id: 3,\n    name: \"Alberto Somayya\",\n    image: \"/assets/images/alberto.png\",\n    designation: \"Executive Chef\",\n    abbr: \"EC\",\n    featured: true,\n    description:\n      \"Award winning three-star Michelin chef with wide International experience having worked closely with whos-who in the culinary world, he specializes in creating mouthwatering Indo-Italian fusion experiences. He says, Put together the cuisines from the two craziest cultures, and you get a winning hit! Amma Mia!\",\n  },\n];\n","import { LEADERS } from \"../shared/leaders\";\n\nexport const Leaders = (state = LEADERS, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n","export const InitialFeedback = {\n  firstname: \"\",\n  lastname: \"\",\n  telnum: \"\",\n  email: \"\",\n  agree: false,\n  contactType: \"Tel.\",\n  message: \"\",\n};\n","import React, { Component } from \"react\";\nimport Main from \"./components/MainComponent\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n// provider is used so that the store is accessible to all components\nimport { ConfigureStore } from \"./redux/configureStore\";\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { Dishes } from \"./dishes\";\nimport { Comments } from \"./comments\";\nimport { Promotions } from \"./promotions\";\nimport { Leaders } from \"./leaders\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport { createForms } from \"react-redux-form\";\nimport { InitialFeedback } from \"./forms\";\n\n// A store is not a class. It's just an object with a few methods on it.\nexport const ConfigureStore = () => {\n  const store = createStore(\n    combineReducers({\n      dishes: Dishes,\n      comments: Comments,\n      promotions: Promotions,\n      leaders: Leaders,\n      ...createForms({\n        // createForms creates and manages the reducer and action creater and fills in all the details on its own as its a part of react-redux-form\n        feedback: InitialFeedback,\n      }),\n    }),\n    // being supplied as enhancers to our store\n    applyMiddleware(thunk, logger)\n    // Redux Thunk middleware allows you to write action creators that return a function instead of an action. The thunk can be used to delay the dispatch of an action, or to dispatch only if a certain condition is met. The inner function receives the store methods dispatch and getState as parameters.\n  );\n\n  return store;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"bootstrap-social/bootstrap-social.css\";\nimport \"./App.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}